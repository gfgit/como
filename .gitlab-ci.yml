stages:
  - Compliance
  - Build
  - Analysis
  - Deploy

variables:
  IMAGE_BASE: ${CI_REGISTRY}/kwinft/ci-images/archlinux/kwinft-base

workflow:
  rules:
    - when: always

include:
  - project: kwinft/tooling
    ref: master
    file:
      - '/analysis/gitlab-ci/static.yml'
      - '/analysis/gitlab-ci/tests.yml'
      - '/docs/gitlab-ci/commits.yml'

Message lint:
  extends: .message-lint
  stage: Compliance

clang-format:
  extends: .clang-format
  stage: Compliance
  image: ${IMAGE_BASE}-master:latest


Coverity Scan:
  extends: .coverity-scan
  stage: Build
  image: ${IMAGE_BASE}-master:latest


.common-master: &common-master
  image: ${IMAGE_BASE}-master:latest
  rules:
    - if: '$COVERITY_SCAN_RUN'
      when: never
    - if: '$CI_COMMIT_BRANCH =~ /^Plasma\// || $CI_COMMIT_TAG'
      when: never
    - when: on_success

.common-stable: &common-stable
  image: ${IMAGE_BASE}-stable:latest
  rules:
    - if: '$COVERITY_SCAN_RUN'
      when: never
    - if: '$CI_COMMIT_BRANCH =~ /^Plasma\// || $CI_COMMIT_TAG'
      when: on_success
    - when: never


.common-build: &common-build
  stage: Build
  script:
    - mkdir build && cd build
    - cmake -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON
      -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_EXE_LINKER_FLAGS=--coverage
      -DCMAKE_INSTALL_PREFIX:PATH=/usr ../
    - make -j$(nproc)
    - make install -j$(nproc)
  artifacts:
    paths:
      - build
    expire_in: 1 week

Master build:
  <<: *common-build
  <<: *common-master

Stable build:
  <<: *common-build
  <<: *common-stable


.common-test:
  extends: .tests-with-coverage
  stage: Analysis
  variables:
    # The lock screen test must be excluded for now because it is very unstable.
    # See: https://bugreports.qt.io/browse/QTBUG-82911
    CTEST_ARGS: -E kwin-testLockScreen
    GCOVR_ARGS: -e tests

Master autotests:
  extends: .common-test
  <<: *common-master
  needs:
    - job: Master build
      artifacts: true

Stable autotests:
  extends: .common-test
  <<: *common-stable
  needs:
    - job: Stable build
      artifacts: true


Add Coverage:
  extends: .add-coverage
  stage: Deploy
  variables:
    COVERAGE_JOB: Master autotests

pages:
  extends: .pages-coverage
  stage: Deploy
  needs:
    - job: Master autotests
      artifacts: true
